buildscript {
    repositories {
    	mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven/'
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
			changing = true
	}
    }
}

apply plugin: 'forge'
apply plugin: 'java'

version = "1.0.0"
group= "com.leafclient"
archivesBaseName = "leafclient"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
    mappings = 'stable_12'
}

def refMap = "${tasks.compileJava.temporaryDir}" + File.separator + "mixins.${archivesBaseName}.refmap.json"
def mixinSrg = "${tasks.reobf.temporaryDir}" + File.separator + "mixins.srg"
afterEvaluate {
    tasks.compileJava.options.compilerArgs += ["-AreobfSrgFile=${tasks.reobf.srg}", "-AoutSrgFile=${mixinSrg}", "-AoutRefMapFile=${refMap}"]
}

reobf {
    setSrgSrg()
    setSrgMcp()
    addExtraSrgFile mixinSrg
}

repositories {
    mavenCentral()
    jcenter()
    maven {
	name = 'sponge'
	url = 'https://repo.spongepowered.org/maven'
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT')
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {

    from(configurations.embed.collect {
        it.isDirectory() ? it : zipTree(it)
    }) {
        exclude 'META-INF/MUMFREY.RSA',
                'META-INF/maven/**',
                'org/**/*.html'
    }
    manifest.attributes(
            'MixinConfigs': 'mixins.leafclient.json',
            'TweakClass': 'com.leafclient.mixins.LeafClientTweaker',
            'FMLCorePluginContainsFMLMod': 'true',
            'FMLCorePlugin': 'com.leafclient.injection.MixinLoader',
            'ForceLoadAsMod': 'true'
    )
}